name: CI
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
env:
  HUSKY: 0

jobs:
  main:
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.8
    with:
      number-of-agents: 3
      parallel-commands: |
        npx nx-cloud record -- npx nx workspace-lint
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx affected --target=lint --parallel=3 & npx nx affected --target=test --parallel=3 --ci --code-coverage & npx nx affected --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.8
    with:
      number-of-agents: 3

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [main, agents]
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    env:
      NODE_VERSION: 16.18.1
    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: Checkout [Default Branch]
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Use the node_modules cache if available [yarn]
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}
      - name: Release
        if: ${{ success() && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx nx affected --target release --all
      - run: npm install
      - run: npm run build
      - run: npm run semantic-release
      - name: Prepare docs for publication
        run: |
          mkdir -p publish
          mv target/doc publish/main
          echo '<!doctype html><a href="actions-toolkit">actions-toolkit</a>' > publish/main/index.html
          echo '<!doctype html><a href="main">main</a>' > publish/index.html
      - name: Publish docs to GitHub pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          COMMIT_MESSAGE: Publishing GitHub Pages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: publish
          SINGLE_COMMIT: true
